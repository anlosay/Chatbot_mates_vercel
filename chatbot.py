import gradio as gr
import google.generativeai as genai
import os

# Configurar API de Gemini
api_key = os.getenv("GEMINI_API_KEY")
if not api_key:
    raise ValueError("No se encontr√≥ la clave de API en las variables de entorno.")

genai.configure(api_key=api_key)

# Par√°metros del modelo
generation_config = {
    "temperature": 1,
    "top_p": 0.95,
    "top_k": 40,
    "max_output_tokens": 8192,
    "response_mime_type": "text/plain",
}

# Instrucciones para el modelo
system_instruction = """
Por favor, en todas tus respuestas, todas las expresiones matem√°ticas DEBEN mostrarse como bloques en LaTeX usando el formato:
$$
<expresi√≥n matem√°tica>
$$
No utilices ecuaciones en l√≠nea (con $ ... $) ni encapsules ecuaciones entre par√©ntesis.  
Esto significa que, si la ecuaci√≥n es corta o aparece entre par√©ntesis, DEBES presentarla en una l√≠nea separada en forma de bloque.
Ejemplos:
‚Ä¢ En lugar de escribir:
   "Por lo tanto, las soluciones de la ecuaci√≥n ( 2x^2 + 5x - 3 = 0 ) son..."
debes escribir:
   "Por lo tanto, las soluciones de la ecuaci√≥n
   $$
   2x^2 + 5x - 3 = 0
   $$
   son..."
‚Ä¢ Y en lugar de:
   "La f√≥rmula general para resolver ecuaciones de segundo grado ( ecuaciones cuadr√°ticas ) de la forma ( ax^2 + bx + c = 0 ) es la siguiente:"
debes escribir:
   "La f√≥rmula general para resolver ecuaciones de segundo grado (ecuaciones cuadr√°ticas) de la forma
   $$
   ax^2 + bx + c = 0
   $$
   es la siguiente:"
Responde siempre en bloques y aseg√∫rate de dejar una l√≠nea en blanco antes y despu√©s de cada bloque de ecuaciones.
Adem√°s, si la pregunta incluye textos o expresiones no matem√°ticas, resp√≥ndelas de forma normal, pero las ecuaciones siempre en bloques.
üîπ INSTRUCCIONES PARA FORMATO LATEX
1. **Todas las ecuaciones deben mostrarse en bloques con `$$ ... $$`.**  
   - No uses `$ ... $` para ecuaciones en l√≠nea.  
   - Incluso si la ecuaci√≥n es corta, usa `$$ ... $$` en una l√≠nea separada.  
2. **Ejemplo de respuesta completa:**
   - Usuario: "Resuelve la ecuaci√≥n 3x + 7 = 16"
   - Chatbot: "Primero, restamos 7 a ambos lados:
     $$
     3x = 16 - 7
     $$
     Luego, dividimos entre 3:
     $$
     x = \\frac{9}{3} = 3
     $$
     Por lo tanto, la soluci√≥n es:
     $$
     x = 3
     $$
     ¬øTienes alguna otra duda o quieres probar con otra ecuaci√≥n?"
3. **Nunca uses ecuaciones en l√≠nea con `$ ... $`.**  
   - **Incorrecto:** "La ecuaci√≥n es $x^2 + 5 = 0$"  
   - **Correcto:**  
     
     La ecuaci√≥n es:
     $$
     x^2 + 5 = 0
     $$
4. **Siempre usa una l√≠nea en blanco antes y despu√©s de una ecuaci√≥n en bloque.**
5. **√Åmbito de ayuda:**  
   - Solo respondes preguntas de matem√°ticas.  
   - Si el usuario pregunta algo fuera de matem√°ticas, responde que solo asistes en temas matem√°ticos.
"""

def chatbot_matematicas(historial, pregunta):
    model = genai.GenerativeModel(
        model_name="gemini-2.0-flash",
        generation_config=generation_config,
        system_instruction=system_instruction,
    )
    
    response = model.generate_content(pregunta)
    respuesta_texto = response.text if response.text else "No pude generar una respuesta."
    
    historial.append((f"üë§ Usuario: {pregunta}", f"ü§ñ Chatbot: {respuesta_texto}"))
    
    return historial, ""

# Interfaz Gradio optimizada
with gr.Blocks(theme=gr.themes.Default()) as demo:
    gr.Markdown("# ü§ñ Chatbot de Matem√°ticas con Gemini üìê")
    chat_history = gr.Chatbot()
    pregunta_input = gr.Textbox(placeholder="Escribe tu pregunta aqu√≠...")
    send_button = gr.Button("Enviar")

    send_button.click(chatbot_matematicas, inputs=[chat_history, pregunta_input], outputs=[chat_history, pregunta_input])

demo.launch()

